---
description: 
globs: 
alwaysApply: false
---
# Data Source & CSV Handling

## Data Source
- Four CSV files (e.g., `people.csv`, `values.csv`, `government.csv`, `beliefs.csv`) stored in AWS S3.
- **S3 object keys (CSV filenames/paths) must be stored in environment variables** (e.g., `S3_PEOPLE_KEY`, `S3_VALUES_KEY`, etc.) for flexibility and future-proofing.
- Always access S3 object keys in code via `process.env.S3_..._KEY`.
- Example usage:
  ```ts
  const peopleKey = process.env.S3_PEOPLE_KEY!;
  const valuesKey = process.env.S3_VALUES_KEY!;
  // ...
  ```
- Fetching:
-- Use AWS SDK with credentials from environment variables to fetch private S3 objects.
-- Use the object key from the environment variable when calling AWS SDK methods.

## Caching
- Cache parsed questions server-side to improve performance.
- Use Next.js `cache: 'force-cache'` for fetching CSVs where appropriate.
- Invalidate cache only when CSV content changes.
- Never expose the data from parseCsv.ts not required by the client or user is not allowed to read

## Best Practices
- Handle CSV parsing errors gracefully.
- Validate CSV data structure before processing.
- Use environment variables for AWS credentials and S3 object keys.
- Ensure secure access to S3 buckets.